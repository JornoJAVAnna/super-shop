package com.my.boy.supershop.controller;


import com.my.boy.supershop.dto.ProductDto;
import com.my.boy.supershop.service.ProductService;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/products")
public class ProductController {

    private final ProductService productService;

    public ProductController(ProductService productService) {
        this.productService = productService;
    }

    // üîì –î–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º (–∞–Ω–æ–Ω–∏–º–Ω—ã–º –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º)
    @GetMapping
    public ResponseEntity<List<ProductDto>> getAllProducts() {
        return ResponseEntity.ok(productService.getAllProducts());
    }

    // üîì –î–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º (–¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞)
    @GetMapping("/{id}")
    public ResponseEntity<ProductDto> getProductById(@PathVariable Long id) {
        return ResponseEntity.ok(productService.getProductById(id));
    }

    // üîê –¢–æ–ª—å–∫–æ –¥–ª—è ADMIN
    @PreAuthorize("hasRole('ADMIN')")
    @PostMapping
    public ResponseEntity<ProductDto> createProduct(@RequestBody ProductDto dto) {
        return ResponseEntity.ok(productService.createProduct(dto));
    }

    // üîê –¢–æ–ª—å–∫–æ –¥–ª—è ADMIN
    @PreAuthorize("hasRole('ADMIN')")
    @PutMapping("/{id}")
    public ResponseEntity<ProductDto> updateProduct(@PathVariable Long id, @RequestBody ProductDto dto) {
        return ResponseEntity.ok(productService.updateProduct(id, dto));
    }

    // üîê –¢–æ–ª—å–∫–æ –¥–ª—è ADMIN
    @PreAuthorize("hasRole('ADMIN')")
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteProduct(@PathVariable Long id) {
        productService.deleteProduct(id);
        return ResponseEntity.noContent().build();
    }
}